var q=Object.defineProperty,H=Object.defineProperties;var J=Object.getOwnPropertyDescriptors;var U=Object.getOwnPropertySymbols;var V=Object.prototype.hasOwnProperty,B=Object.prototype.propertyIsEnumerable;var z=(e,t,n)=>t in e?q(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,u=(e,t)=>{for(var n in t||(t={}))V.call(t,n)&&z(e,n,t[n]);if(U)for(var n of U(t))B.call(t,n)&&z(e,n,t[n]);return e},W=(e,t)=>H(e,J(t));import{a5 as K,a6 as M,a7 as Q,a8 as h,a9 as X,aa as Y,ab as Z,ac as ee,ad as _,ae as te,af as ne,ag as se,ah as ae,ai as p,aj as re,ak as oe,al as y,am as m,an as ie,C as R}from"./vendor-50ac03a8.js";const ce=!0;let D=!1,d,b,E;function le(e,t){return D||(D=!0,d=K(e),b=M(d),E=Q(d),t&&t({app:d,auth:b,db:E})),{app:d,auth:b,db:E}}let i,l,w;async function T(){const t=await(await fetch("/firebase.config.json")).json();w=t.functionsHost,console.debug("configured functions host:",w);const n=le(t,({auth:a})=>{h(a,s=>{F.forEach(r=>r(s))})});i=n.auth,l=n.db}let f={user:void 0,userStudies:void 0,onboarded:!1},S,x;function k(e){S=p(l,"users",e),x=e}function de(){return X(S)}function v(e,t=!0){return ae(S,e,{merge:t})}async function ue(e,t,n=!0){const a=p(l,"users",x,"studies",e);await re(a,t,{merge:n})}async function $(){return(await oe(y(l,"studies"))).docs.map(t=>t.data())}const j=[],F=[];function P(e){f=ie(f,e),j.forEach(t=>t(f))}async function C(e){m(p(l,"users",e.uid),t=>{const n=t.data();P(a=>{a.user=n})})}async function A(e){const t=y(l,"users",e.uid,"studies");m(t,n=>{const a={};n.forEach(s=>{const r=s.data();a[r.studyId]=r}),P(s=>{s.userStudies=a})})}function he(){m(y(l,"studies"),e=>{const t=[];e.forEach(function(n){t.push(n.data())}),P(n=>{n.studies=t})})}var O={async initialize(e=!0){if(e){await T();async function r(o){switch(console.log("message from content script received:",o.type,o),o.type){case"rally-sdk.complete-signup":const c=o.detail;if(!c)throw new Error("handling rally-sdk.complete-signup from content script: No study ID provided.");if(w===void 0)throw new Error("Firebase Functions host not defined, cannot generate JWTs for extensions.");if(!(await $()).filter(g=>g.studyId===c))throw new Error(`Received rally-sdk.complete-signup for non-existent study: ${c}`);const G=await(await new Promise(g=>{h(i,I=>{g(I)})})).getIdToken(),L=JSON.stringify({studyId:c,idToken:G}),N=(await(await fetch(`${w}/rallytoken`,{method:"POST",headers:{"Content-Type":"application/json"},body:L})).json()).rallyToken;console.debug("dispatching rally-sdk.complete-signup-response with token"),window.dispatchEvent(new CustomEvent("rally-sdk.complete-signup-response",{detail:{studyId:c,rallyToken:N}}));break;case"rally-sdk.web-check-response":console.debug("Received rally-sdk.web-check-response.");break;default:console.warn(`Unknown message received from content script: ${o.type}`)}}window.addEventListener("rally-sdk.complete-signup",r),window.addEventListener("rally-sdk.web-check-response",r)}else return;const t={};let n;const a=await new Promise(r=>{h(i,o=>{r(o)})});a!==null&&(k(a.uid),n=await de(),n=n.data(),C(a),A(a),console.debug("initialized, dispatching rally-sdk.web-check"),window.dispatchEvent(new CustomEvent("rally-sdk.web-check",{})));let s=await $();return he(),t._initialized=!0,n&&(t.user=n),s&&(t.studies=s),t},async onAuthStateChanged(e){await T(),h(i,e)},async loginWithGoogle(){const e=new Y;e.setCustomParameters({prompt:"select_account"});let t;try{t=await Z(i,e)}catch(n){console.error("there was an error",n)}console.debug("Logged in as",t.user.email),k(t.user.uid),C(t.user),A(t.user),console.debug("initialized, dispatching rally-sdk.web-check"),window.dispatchEvent(new CustomEvent("rally-sdk.web-check",{}))},async loginWithEmailAndPassword(e,t){let n;try{n=await ee(i,e,t)}catch(a){console.error("there was an error",a),localStorage.setItem("signInErr",a);return}n.user.emailVerified?(k(n.user.uid),C(n.user),A(n.user),console.debug("initialized, dispatching rally-sdk.web-check"),window.dispatchEvent(new CustomEvent("rally-sdk.web-check",{}))):(console.warn("Email account not verified, sending verification email"),await _(n.user))},async signupWithEmailAndPassword(e,t){let n;try{n=await te(i,e,t)}catch(a){console.error("there was an error",a),localStorage.setItem("createErr",a);return}console.info("Sending verification email"),await _(n.user)},async sendUserPasswordResetEmail(e){try{await ne(i,e),console.info("Sending password reset email")}catch(t){console.error("there was an error",t),localStorage.setItem("resetPasswordErr",t);return}},async resetUserPassword(e){try{let t=i.currentUser;await se(t,e),console.info("reset password")}catch(t){console.error("there was an error",t);return}},async updateOnboardedStatus(e){return v({onboarded:e})},async updateStudyEnrollment(e,t,n){const a=!!n,s=u({},f.userStudies||{});return e in s||(s[e]={}),s[e]=u({},s[e]),s[e].enrolled=t,s[e].studyId=e,s[e].attached=a,t&&(s[e].joinedOn=new Date),await ue(e,s[e]),!0},async updatePlatformEnrollment(e){return v({enrolled:e})},async updateDemographicSurvey(e){return v({demographicsData:e})},onAuthChange(e){F.push(e)},onNextState(e){j.push(e)}};function we(e=O){const t=R({_initialized:!1}),{subscribe:n,set:a}=t;return e.initialize(ce).then(s=>{a(s)}),e.onNextState(s=>{const r=W(u({},s),{_initialized:!0});a(r)}),{subscribe:n,set:a,async loginWithGoogle(){return e.loginWithGoogle()},async loginWithEmailAndPassword(s,r){return e.loginWithEmailAndPassword(s,r)},async signupWithEmailAndPassword(s,r){return e.signupWithEmailAndPassword(s,r)},async sendUserPasswordResetEmail(s){return e.sendUserPasswordResetEmail(s)},async updateOnboardedStatus(s){return e.updateOnboardedStatus(s)},async updateStudyEnrollment(s,r){const o=!!r;console.debug(`Rally - changing study ${s} enrollment to ${o}`);try{return await e.updateStudyEnrollment(s,o)}catch(c){console.error(c)}},async updatePlatformEnrollment(s){const r=!!s;console.debug(`Rally - changing enrollment to ${r}`);try{return await e.updatePlatformEnrollment(r)}catch(o){console.error(o)}},async updateDemographicSurvey(s){try{await e.updateDemographicSurvey(s)}catch(r){console.error("Rally - failed to update the demographic survey",r)}}}}function fe(){const{subscribe:e,set:t}=R(void 0);return O.onAuthStateChanged(n=>{t(n!==null)}),{subscribe:e}}const Se=fe(),ke=we();export{Se as i,ke as s};
